// *************************** Crewed Landing Duna / Mars

CONTRACT_TYPE
{
    name = DunaLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 100
	
    notes = Land a crew on @targetBody
    synopsis = Land a crew on @targetBody
	
    description = We have walked on @CareerEvolution:Moon and have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planet and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mars
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SSOneYear
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = LandOnDunaCrew
		type = VesselParameterGroup
		title = Land a crew on @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = PlantFlag
			type = PlantFlag
			disableOnStateChange = true
			title = Plant a Flag on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
	PARAMETER
	{
		name = CollectScience
		type = CollectScience
		recoveryMethod = RecoverOrTransmit
		situation = SrfLanded
		title = Return Science from your expedition on @targetBody
		hideChildren = true
	}
}

// *************************** Crewed Landing Eve Moons

CONTRACT_TYPE
{
    name = EveMoonsLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 101
	
    notes = Land a crew on the Moons of @targetBody
    synopsis = Land a crew on the Moons of @targetBody
	
    description = We have walked on @CareerEvolution:Moon and have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planet and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Venus
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	DATA
	{
		type = List<CelestialBody>
		Moons = HomeWorld().Parent().Children().ElementAt(1).Children()
		title = Find Eve's Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SSOneYear
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveMoonsLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = LandOnMoonCrew
		type = VesselParameterGroup
		title = Land a crew on the moons of @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 2
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks6
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
}

// *************************** Crewed Landing Duna Moons

CONTRACT_TYPE
{
    name = DunaMoonsLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 102
	
    notes = Land a crew on the Moons of @targetBody
    synopsis = Land a crew on the Moons of @targetBody
	
    description = We have walked on @CareerEvolution:Moon and have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planet and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mars
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	DATA
	{
		type = List<CelestialBody>
		Moons = HomeWorld().Parent().Children().ElementAt(3).Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SSOneYear
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaMoonsLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = LandOnMoonCrew
		type = VesselParameterGroup
		title = Land a crew on the moons of @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 2
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
}

// *************************** Crewed Landing Asteroid

CONTRACT_TYPE
{
    name = AsteroidLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on an Asteroid
	agent = Experimental Engineering Group
	
	sortKey = 103
	
    notes = Land a crew on an Asteroid
    synopsis = Land a crew on an Asteroid
	
    description = We have walked on @CareerEvolution:Moon and have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the asteroid.
		
    completedMessage = Success! Your brave crew has landed on an asteroid, maybe it is time to start exploiting them for their resources?

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Earth
	
	
    // REWARDS
    rewardScience = 5
    rewardReputation = 20
    rewardFunds = @CareerEvolution:Kerbucks10
    advanceFunds = @CareerEvolution:Kerbucks10
	
	prestige = Exceptional

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SSOneYear
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = AsteroidLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = CrewedLanding
		type = VesselParameterGroup
		title = Land a crew on an Asteroid
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			partModule = ModuleAsteroid
			minCount = 1
			title = Attach to the Asteroid with the Grabbing Device
			hideChildren = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
}

// *************************** Crewed Landing Dres / Vesta

CONTRACT_TYPE
{
    name = DresLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 104
	
    notes = Land a crew on @targetBody
    synopsis = Land a crew on @targetBody
	
    description = We have walked on @CareerEvolution:Moon and on @CareerEvolution:Mars. We have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planet and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/dres
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	DATA
	{
		type = double
		lowSMA = HomeWorld().Parent().Children().ElementAt(3).SemiMajorAxis() + 1
		highSMA = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First().SemiMajorAxis()
		title = SMA Values
	}
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() <= @highSMA && cb.SemiMajorAxis() >= @lowSMA && cb.IsPlanet() && cb.HasSurface() && cb != HomeWorld())
		title = Find Planets Between Mars and Jupiter or Duna and Jool
    }
	
	DATA
	{
		type = CelestialBody
		dres = @/targetBodies.First()
		title = Find Dres
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 0
		title = There must be a 2nd planet past Duna-Mars
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DresLanding
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding-Crew
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = CrewedLanding
		type = VesselParameterGroup
		title = Land a crew on @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = PlantFlag
			type = PlantFlag
			disableOnStateChange = true
			title = Plant a Flag on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
	PARAMETER
	{
		name = CollectScience
		type = CollectScience
		recoveryMethod = RecoverOrTransmit
		situation = SrfLanded
		title = Return Science from your expedition on @targetBody
		hideChildren = true
	}
}

// *************************** Crewed Landing Ceres

CONTRACT_TYPE
{
    name = CeresLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 105
	
    notes = Land a crew on @targetBody
    synopsis = Land a crew on @targetBody
	
    description = We have walked on @CareerEvolution:Moon and on @CareerEvolution:Mars. We have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planet and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/ceres
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	DATA
	{
		type = double
		lowSMA = HomeWorld().Parent().Children().ElementAt(3).SemiMajorAxis()
		highSMA = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First().SemiMajorAxis()
		title = SMA Values
	}
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() <= @highSMA && cb.SemiMajorAxis() >= @lowSMA && cb.IsPlanet() && cb.HasSurface() && cb != HomeWorld())
		title = Find Planets Between Mars and Jupiter or Duna and Jool
    }
	
	DATA
	{
		type = CelestialBody
		ceres = @/targetBodies.Last()
		title = Find Ceres
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 1
		title = There must be a 2nd planet past Duna-Mars
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = CeresLanding
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding-Crew
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = CrewedLanding
		type = VesselParameterGroup
		title = Land a crew on @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = PlantFlag
			type = PlantFlag
			disableOnStateChange = true
			title = Plant a Flag on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
	PARAMETER
	{
		name = CollectScience
		type = CollectScience
		recoveryMethod = RecoverOrTransmit
		situation = SrfLanded
		title = Return Science from your expedition on @targetBody
		hideChildren = true
	}
}

// *************************** Crewed Landing Jool's Moons

CONTRACT_TYPE
{
    name = JoolMoonsLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 106
	
    notes = Land a crew on the Moons of @targetBody
    synopsis = Land a crew on the Moons of @targetBody
	
    description = We have walked on @CareerEvolution:Moon and on @CareerEvolution:Mars. We have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planet and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Jupiter
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = JoolMoonsLanding
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding-Crew
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = LandOnMoonCrew
		type = VesselParameterGroup
		title = Land a crew on the moons of @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks6
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
}

// *************************** Crewed Landing Moho / Mercury

CONTRACT_TYPE
{
    name = MohoLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 107
	
    notes = Land a crew on @targetBody
    synopsis = Land a crew on @targetBody
	
    description = We have walked on @CareerEvolution:Moon and on @CareerEvolution:Mars. We have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planet and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mercury
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MohoLanding
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding-Crew
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = CrewedLanding
		type = VesselParameterGroup
		title = Land a crew on @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = PlantFlag
			type = PlantFlag
			disableOnStateChange = true
			title = Plant a Flag on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
	PARAMETER
	{
		name = CollectScience
		type = CollectScience
		recoveryMethod = RecoverOrTransmit
		situation = SrfLanded
		title = Return Science from your expedition on @targetBody
		hideChildren = true
	}
}

// *************************** Crewed Landing Eve / Venus

CONTRACT_TYPE
{
    name = EveLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 108
	
    notes = Land a crew on @targetBody
    synopsis = Land a crew on @targetBody
	
    description = We have walked on @CareerEvolution:Moon and on @CareerEvolution:Mars, but this will be the ultimate test. If you can land a crew on @targetBody and get them home safely, you will be one of the best Kerbal players of all time. Good luck and Godspeed.
		
    completedMessage = Success! You are the ULTIMATE KSP player. You should brag about this accomplishment. Seriously. This is a big deal!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Venus
	
	
    // REWARDS
    rewardScience = 50
    rewardReputation = 20
    rewardFunds = @CareerEvolution:Kerbucks14
    advanceFunds = @CareerEvolution:Kerbucks14
	
	prestige = Exceptional

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding-Crew
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = CrewedLanding
		type = VesselParameterGroup
		title = Land a crew on @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = PlantFlag
			type = PlantFlag
			disableOnStateChange = true
			title = Plant a Flag on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
	PARAMETER
	{
		name = CollectScience
		type = CollectScience
		recoveryMethod = RecoverOrTransmit
		situation = SrfLanded
		title = Return Science from your expedition on @targetBody
		hideChildren = true
	}
}

// *************************** Crewed Landing Saturn's Moons

CONTRACT_TYPE
{
    name = SaturnMoonsLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 109
	
    notes = Land a crew on the Moons of @targetBody
    synopsis = Land a crew on the Moons of @targetBody
	
    description = We have walked on @CareerEvolution:Moon and on @CareerEvolution:Mars. We have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planetary body and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/saturn
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		saturn = @/targetBodies.ElementAt(0)
		title = First Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SaturnMoonsLanding
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding-Crew
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = LandOnMoonCrew
		type = VesselParameterGroup
		title = Land a crew on the moons of @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks6
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
}

// *************************** Crewed Landing Uranus' Moons

CONTRACT_TYPE
{
    name = UranusMoonsLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 110
	
    notes = Land a crew on the Moons of @targetBody
    synopsis = Land a crew on the Moons of @targetBody
	
    description = We have walked on @CareerEvolution:Moon and on @CareerEvolution:Mars. We have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planetary body and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/uranus
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		uranus = @/targetBodies.ElementAt(1)
		title = 2nd Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = UranusMoonsLanding
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding-Crew
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = LandOnMoonCrew
		type = VesselParameterGroup
		title = Land a crew on the moons of @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks6
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
}

// *************************** Crewed Landing Neptune's Moons

CONTRACT_TYPE
{
    name = NeptuneMoonsLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 111
	
    notes = Land a crew on the Moons of @targetBody
    synopsis = Land a crew on the Moons of @targetBody
	
    description = We have walked on @CareerEvolution:Moon and on @CareerEvolution:Mars. We have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planetary body and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/neptune
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		neptune = @/targetBodies.ElementAt(2)
		title = 3rd Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = NeptuneMoonsLanding
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding-Crew
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = LandOnMoonCrew
		type = VesselParameterGroup
		title = Land a crew on the moons of @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks6
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
}

// *************************** Crewed Landing Pluto

CONTRACT_TYPE
{
    name = PlutoLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 112
	
    notes = Land a crew on @targetBody
    synopsis = Land a crew on @targetBody
	
    description = We have walked on @CareerEvolution:Moon and on @CareerEvolution:Mars. We have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planet and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/pluto
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		pluto = @/targetBodies.ElementAt(3)
		title = Fourth Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 3
		title = There must be a 4th planet past @/jupiter
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = PlutoLanding
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding-Crew
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = CrewedLanding
		type = VesselParameterGroup
		title = Land a crew on @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = PlantFlag
			type = PlantFlag
			disableOnStateChange = true
			title = Plant a Flag on @targetBody
			hideChildren = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
	PARAMETER
	{
		name = CollectScience
		type = CollectScience
		recoveryMethod = RecoverOrTransmit
		situation = SrfLanded
		title = Return Science from your expedition on @targetBody
		hideChildren = true
	}
}

// *************************** Crewed Landing Pluto's Moons

CONTRACT_TYPE
{
    name = PlutoMoonsLanding-Crew
    group = CrewedLanding
	
    title = Crewed Landing on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 113
	
    notes = Land a crew on the Moons of @targetBody
    synopsis = Land a crew on the Moons of @targetBody
	
    description = We have walked on @CareerEvolution:Moon and on @CareerEvolution:Mars. We have lived in space for more than a year. We are ready to send our brave crew out to another planet in our Solar System. No one likes to travel alone, so we must send a small crew out there to explore! Have your crew land on the planet, plant a flag and return some science!
		
    completedMessage = Success! Your brave crew has landed on another planetary body and returned home with science and stories!

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/pluto
	
	
    // REWARDS
    rewardScience = 1
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks6
    advanceFunds = @CareerEvolution:Kerbucks6
	
	prestige = Exceptional

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		pluto = @/targetBodies.ElementAt(3)
		title = 4th Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = PlutoMoonsLanding
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding-Crew
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = LandOnMoonCrew
		type = VesselParameterGroup
		title = Land a crew on the moons of @targetBody
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			title = Have at least 1 Crewmember
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks6
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
}