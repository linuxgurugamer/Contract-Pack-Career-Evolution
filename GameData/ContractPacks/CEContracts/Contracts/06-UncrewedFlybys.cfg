// *************************** Flyby Eve / Venus

CONTRACT_TYPE
{
    name = FlybyEve
    group = UncrewedFlybys
	
    title = Flyby @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 100
	
    notes = Launch a craft to flyby @targetBody
    synopsis = Launch a craft to flyby @targetBody
	
    description = It is time for us to send a probe to our closest planetary neighbor.
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Venus
	
	
    // REWARDS
    rewardScience = 4
    rewardReputation = 10
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = Geostationary
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyEve
		type = VesselParameterGroup
		title = Flyby @targetBody
		define = FlybyEve
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = FlybyPlanet
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
			hideChildren = true
		}
	}
}

// *************************** Flyby Eve's Moons (Gilly)

CONTRACT_TYPE
{
    name = FlybyEveMoons
    group = UncrewedFlybys
	
    title = Flyby the Moon of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 101
	
    notes = Launch a craft to flyby the moon of @targetBody
    synopsis = Launch a craft to flyby the moon of @targetBody
	
    description = It is time for us to send a probe to visit the moon of @targetBody.
		
    completedMessage = Success! Your probe flew near the moon of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Venus
	
	
    // REWARDS
    rewardScience = 3
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = List<CelestialBody>
		Moons = HomeWorld().Parent().Children().ElementAt(1).Children()
		title = Find Eve's Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyEve
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyEveMoons
		type = VesselParameterGroup
		title = Flyby the Moon of @targetBody
		define = FlybyEveMoons

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
        {
            name = MoonFlybys
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
			completedMessage = You have successfully flown by @targetMoon
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Flyby Duna / Mars

CONTRACT_TYPE
{
    name = FlybyDuna
    group = UncrewedFlybys
	
    title = Flyby @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 102
	
    notes = Launch a craft to flyby @targetBody
    synopsis = Launch a craft to flyby @targetBody
	
    description = It is time for us to send a probe to our planetary neighbor.
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mars
	
	
    // REWARDS
    rewardScience = 4
    rewardReputation = 10
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = Geostationary
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyPlanet
		type = VesselParameterGroup
		title = Flyby @targetBody
		define = FlybyPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = FlybyPlanet
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
			hideChildren = true
		}
	}
}

// *************************** Flyby Duna's Moons (Ike) / (Deimos/Phobos)

CONTRACT_TYPE
{
    name = FlybyDunaMoons
    group = UncrewedFlybys
	
    title = Flyby the Moon of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 103
	
    notes = Launch a craft to flyby the moon of @targetBody
    synopsis = Launch a craft to flyby the moon of @targetBody
	
    description = It is time for us to send a probe to visit the moon of @targetBody.
		
    completedMessage = Success! Your probe flew near the moon of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mars
	
	
    // REWARDS
    rewardScience = 3
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = List<CelestialBody>
		Moons = HomeWorld().Parent().Children().ElementAt(3).Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyDuna
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyMoons
		type = VesselParameterGroup
		title = Flyby the Moon of @targetBody
		define = FlybyMoons

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
        {
            name = MoonFlybys
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
			completedMessage = You have successfully flown by @targetMoon
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Flyby Jool / Jupiter

CONTRACT_TYPE
{
    name = FlybyJool
    group = UncrewedFlybys
	
    title = Flyby @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 104
	
    notes = Launch a craft to flyby @targetBody
    synopsis = Launch a craft to flyby @targetBody
	
    description = It is time for us to send a probe to @targetBody for science!
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Jupiter
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyDuna
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyPlanet
		type = VesselParameterGroup
		title = Flyby @targetBody
		define = FlybyPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = FlybyPlanet
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
			hideChildren = true
		}
	}
}

// *************************** Flyby Moho / Mercury

CONTRACT_TYPE
{
    name = FlybyMoho
    group = UncrewedFlybys
	
    title = Flyby @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 105
	
    notes = Launch a craft to flyby @targetBody
    synopsis = Launch a craft to flyby @targetBody
	
    description = It is time for us to send a probe to @targetBody.
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mercury
	
	
    // REWARDS
    rewardScience = 3
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyJool
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyPlanet
		type = VesselParameterGroup
		title = Flyby @targetBody
		define = FlybyPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = FlybyPlanet
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
			hideChildren = true
		}
	}
}

// *************************** Flyby Dres / Vesta

CONTRACT_TYPE
{
    name = FlybyDres
    group = UncrewedFlybys
	
    title = Flyby @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 106
	
    notes = Launch a craft to flyby @targetBody
    synopsis = Launch a craft to flyby @targetBody
	
    description = It is time for us to send a probe to @targetBody.
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/dres
	
	
    // REWARDS
    rewardScience = 3
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = double
		lowSMA = HomeWorld().Parent().Children().ElementAt(3).SemiMajorAxis() + 1
		highSMA = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First().SemiMajorAxis()
		title = SMA Values
	}
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() <= @highSMA && cb.SemiMajorAxis() >= @lowSMA && cb.IsPlanet() && cb.HasSurface() && cb != HomeWorld())
		title = Find Planets Between Mars and Jupiter or Duna and Jool
    }
	
	DATA
	{
		type = CelestialBody
		dres = @/targetBodies.First()
		title = Find Dres
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 0
		title = There must be a 2nd planet past Duna-Mars
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyJool
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyPlanet
		type = VesselParameterGroup
		title = Flyby @targetBody
		define = FlybyPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = FlybyPlanet
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
			hideChildren = true
		}
	}
}

// *************************** Flyby Ceres

CONTRACT_TYPE
{
    name = FlybyCeres
    group = UncrewedFlybys
	
    title = Flyby @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 107
	
    notes = Launch a craft to flyby @targetBody
    synopsis = Launch a craft to flyby @targetBody
	
    description = It is time for us to send a probe to @targetBody for science!
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/ceres
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = double
		lowSMA = HomeWorld().Parent().Children().ElementAt(3).SemiMajorAxis()
		highSMA = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First().SemiMajorAxis()
		title = SMA Values
	}
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() <= @highSMA && cb.SemiMajorAxis() >= @lowSMA && cb.IsPlanet() && cb.HasSurface() && cb != HomeWorld())
		title = Find Planets Between Mars and Jupiter or Duna and Jool
    }
	
	DATA
	{
		type = CelestialBody
		ceres = @/targetBodies.Last()
		title = Find Ceres
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 1
		title = There must be a 2nd planet past Duna-Mars
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyJool
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyPlanet
		type = VesselParameterGroup
		title = Flyby @targetBody
		define = FlybyPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = FlybyPlanet
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
			hideChildren = true
		}
	}
}

// *************************** Flyby Jool's Moons / Jupiter's Moons

CONTRACT_TYPE
{
    name = FlybyJoolMoons
    group = UncrewedFlybys
	
    title = Flyby the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 108
	
    notes = Launch a craft to flyby the moons of @targetBody
    synopsis = Launch a craft to flyby the moons of @targetBody
	
    description = It is time for us to send a probe to visit the moons of @targetBody.
		
    completedMessage = Success! Your probe flew near the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Jupiter
	
	
    // REWARDS
    rewardScience = 3
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyJool
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyMoons
		type = VesselParameterGroup
		title = Flyby the Moon of @targetBody
		define = FlybyMoons
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
        {
            name = MoonFlybys
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
			completedMessage = You have successfully flown by @targetMoon
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Flyby Saturn / Eeloo / Sarnus

CONTRACT_TYPE
{
    name = FlybySaturn
    group = UncrewedFlybys
	
    title = Flyby @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 109
	
    notes = Launch a craft to flyby @targetBody
    synopsis = Launch a craft to flyby @targetBody
	
    description = It is time for us to send a probe to @targetBody for science!
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/saturn
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		saturn = @/targetBodies.ElementAt(0)
		title = First Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyJool
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyPlanet
		type = VesselParameterGroup
		title = Flyby @targetBody
		define = FlybyPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = FlybyPlanet
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
			hideChildren = true
		}
	}
}

// *************************** Flyby Uranus / Urlum

CONTRACT_TYPE
{
    name = FlybyUranus
    group = UncrewedFlybys
	
    title = Flyby @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 110
	
    notes = Launch a craft to flyby @targetBody
    synopsis = Launch a craft to flyby @targetBody
	
    description = It is time for us to send a probe to @targetBody for science!
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/uranus
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		uranus = @/targetBodies.ElementAt(1)
		title = Second Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 1
		title = There must be a 2nd planet past @/jupiter
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyJool
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyPlanet
		type = VesselParameterGroup
		title = Flyby @targetBody
		define = FlybyPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = FlybyPlanet
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
			hideChildren = true
		}
	}
}

// *************************** Flyby Neptune / Neidon

CONTRACT_TYPE
{
    name = FlybyNeptune
    group = UncrewedFlybys
	
    title = Flyby @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 111
	
    notes = Launch a craft to flyby @targetBody
    synopsis = Launch a craft to flyby @targetBody
	
    description = It is time for us to send a probe to @targetBody for science!
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/neptune
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		neptune = @/targetBodies.ElementAt(2)
		title = Second Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 2
		title = There must be a 3rd planet past @/jupiter
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyJool
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyPlanet
		type = VesselParameterGroup
		title = Flyby @targetBody
		define = FlybyPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = FlybyPlanet
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
			hideChildren = true
		}
	}
}

// *************************** Flyby Saturn's / Sarnus' Moons

CONTRACT_TYPE
{
    name = FlybySaturnMoons
    group = UncrewedFlybys
	
    title = Flyby the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 112
	
    notes = Launch a craft to flyby the moons of @targetBody
    synopsis = Launch a craft to flyby the moons of @targetBody
	
    description = It is time for us to send a probe to visit the moons of @targetBody.
		
    completedMessage = Success! Your probe flew near the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/saturn
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		saturn = @/targetBodies.ElementAt(0)
		title = First Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybySaturn
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyMoons
		type = VesselParameterGroup
		title = Flyby the Moons of @targetBody
		define = FlybyMoons
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
        {
            name = MoonFlybys
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
			completedMessage = You have successfully flown by @targetMoon
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Flyby Uranus / Urlum's Moons

CONTRACT_TYPE
{
    name = FlybyUranusMoons
    group = UncrewedFlybys
	
    title = Flyby the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 113
	
    notes = Launch a craft to flyby the moons of @targetBody
    synopsis = Launch a craft to flyby the moons of @targetBody
	
    description = It is time for us to send a probe to visit the moons of @targetBody.
		
    completedMessage = Success! Your probe flew near the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/uranus
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		uranus = @/targetBodies.ElementAt(1)
		title = 2nd Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyUranus
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyMoons
		type = VesselParameterGroup
		title = Flyby the Moons of @targetBody
		define = FlybyMoons
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
        {
            name = MoonFlybys
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
			completedMessage = You have successfully flown by @targetMoon
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Flyby Neptune / Neidon's Moons

CONTRACT_TYPE
{
    name = FlybyNeptuneMoons
    group = UncrewedFlybys
	
    title = Flyby the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 114
	
    notes = Launch a craft to flyby the moons of @targetBody
    synopsis = Launch a craft to flyby the moons of @targetBody
	
    description = It is time for us to send a probe to visit the moons of @targetBody.
		
    completedMessage = Success! Your probe flew near the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/neptune
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		neptune = @/targetBodies.ElementAt(2)
		title = 3rd Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyNeptune
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyMoons
		type = VesselParameterGroup
		title = Flyby the Moons of @targetBody
		define = FlybyMoons
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
        {
            name = MoonFlybys
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
			completedMessage = You have successfully flown by @targetMoon
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Flyby Pluto / Plock

CONTRACT_TYPE
{
    name = FlybyPluto
    group = UncrewedFlybys
	
    title = Flyby @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 115
	
    notes = Launch a craft to flyby @targetBody
    synopsis = Launch a craft to flyby @targetBody
	
    description = It is time for us to send a probe to @targetBody for science!
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/pluto
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		pluto = @/targetBodies.ElementAt(3)
		title = Second Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 3
		title = There must be a 4th planet past @/jupiter
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyNeptune
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyPlanet
		type = VesselParameterGroup
		title = Flyby @targetBody
		define = FlybyPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = FlybyPlanet
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
			hideChildren = true
		}
	}
}

// *************************** Flyby Pluto / Plock's Moon

CONTRACT_TYPE
{
    name = FlybyPlutoMoons
    group = UncrewedFlybys
	
    title = Flyby the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 116
	
    notes = Launch a craft to flyby the moons of @targetBody
    synopsis = Launch a craft to flyby the moons of @targetBody
	
    description = It is time for us to send a probe to visit the moons of @targetBody.
		
    completedMessage = Success! Your probe flew near the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/pluto
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		pluto = @/targetBodies.ElementAt(3)
		title = 4th Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyPluto
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = FlybyMoons
		type = VesselParameterGroup
		title = Flyby the Moons of @targetBody
		define = FlybyMoons
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
        {
            name = MoonFlybys
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
			completedMessage = You have successfully flown by @targetMoon
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}