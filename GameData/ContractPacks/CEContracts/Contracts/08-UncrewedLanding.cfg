// *************************** Land on Eve / Venus

CONTRACT_TYPE
{
    name = EveLanding
    group = UncrewedLanding
	
    title = Land on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 100
	
    notes = Launch a craft to land on @targetBody
    synopsis = Launch a craft to land on @targetBody
	
    description = It is time for us to send a probe to land on our closest planetary neighbor.
		
    completedMessage = Success! Your probe successfully landed on @targetBody and you have returned important scientific data for our scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Venus
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyEve
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on @targetBody
		define = PlanetaryLanding
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
		}
	}
}

// *************************** Land on Eve's Moons (Gilly)

CONTRACT_TYPE
{
    name = EveMoonsLanding
    group = UncrewedOrbits
	
    title = Land on the Moon of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 101
	
    notes = Launch a craft to land on the moon of @targetBody
    synopsis = Launch a craft to land on the moon of @targetBody
	
    description = It is time for us to send a probe to land on the moon of @targetBody.
		
    completedMessage = Success! Your probe landed on the moon of @targetBody and you have returned important scientific data for our scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Venus
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = List<CelestialBody>
		Moons = HomeWorld().Parent().Children().ElementAt(1).Children()
		title = Find Eve's Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitEveMoons
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = MoonLanding
		type = VesselParameterGroup
		title = Land on the Moon of @targetBody
		define = Moon Landing

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 2
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks4
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Land on Duna / Mars

CONTRACT_TYPE
{
    name = DunaLanding
    group = UncrewedLanding
	
    title = Land on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 102
	
    notes = Launch a craft to land on @targetBody
    synopsis = Launch a craft to land on @targetBody
	
    description = It is time for us to send a probe to land on @targetBody.
		
    completedMessage = Success! Your probe landed on @targetBody and you have returned important scientific data for our scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mars
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyDuna
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on @targetBody
		define = PlanetaryLanding
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
		}
	}
}

// *************************** Land on Duna's Moons (Ike) / (Deimos/Phobos)

CONTRACT_TYPE
{
    name = DunaMoonsLanding
    group = UncrewedOrbits
	
    title = Land on the Moon of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 103
	
    notes = Launch a craft to land on the moons of @targetBody
    synopsis = Launch a craft to land on the moons of @targetBody
	
    description = It is time for us to send a probe to land on the moons of @targetBody.
		
    completedMessage = Success! Your probe landed on the moons of @targetBody and you have returned important scientific data for our scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mars
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = List<CelestialBody>
		Moons = HomeWorld().Parent().Children().ElementAt(3).Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitDunaMoons
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on the Moons of @targetBody
		define = PlanetaryLanding

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 2
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks4
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Moho / Mercury

CONTRACT_TYPE
{
    name = MohoLanding
    group = UncrewedOrbits
	
    title = Land on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 104
	
    notes = Launch a craft to land on @targetBody
    synopsis = Launch a craft to land on @targetBody
	
    description = It is time for us to send a probe to land on @targetBody.
		
    completedMessage = Success! Your probe landed on @targetBody and you have returned important scientific data for our scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mercury
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitMoho
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on @targetBody
		define = PlanetaryLanding
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
		}
	}
}

// *************************** Asteroid Landing

CONTRACT_TYPE
{
    name = AsteroidLanding
    group = UncrewedOrbits
	
    title = Land on an Asteroid
	agent = Experimental Engineering Group
	
	sortKey = 105
	
    notes = Launch a craft to land on an asteroid
    synopsis = Launch a craft to land on an asteroid
	
    description = It is time for us to send a probe to land on an asteroid.
		
    completedMessage = Success! Your probe landed on the asteroid and you have returned important scientific data for our scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Earth
	
	
    // REWARDS
    rewardScience = 10
    rewardReputation = 10
    rewardFunds = @CareerEvolution:Kerbucks7
	
    advanceFunds = @CareerEvolution:Kerbucks7
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitMoho
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on @targetBody
		define = PlanetaryLanding
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			partModule = ModuleAsteroid
			minCount = 1
			title = Attach to the Asteroid with the Grabbing Device
			hideChildren = true
		}
	}
}

// *************************** Land on Dres / Vesta

CONTRACT_TYPE
{
    name = DresLanding
    group = UncrewedLanding
	
    title = Land on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 106
	
    notes = Launch a craft to land on @targetBody
    synopsis = Launch a craft to land on @targetBody
	
    description = It is time for us to send a probe to land on @targetBody.
		
    completedMessage = Success! Your probe landed on @targetBody and you have returned important scientific data for our scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/dres
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = double
		lowSMA = HomeWorld().Parent().Children().ElementAt(3).SemiMajorAxis() + 1
		highSMA = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First().SemiMajorAxis()
		title = SMA Values
	}
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() <= @highSMA && cb.SemiMajorAxis() >= @lowSMA && cb.IsPlanet() && cb.HasSurface() && cb != HomeWorld())
		title = Find Planets Between Mars and Jupiter or Duna and Jool
    }
	
	DATA
	{
		type = CelestialBody
		dres = @/targetBodies.First()
		title = Find Dres
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 0
		title = There must be a 2nd planet past Duna-Mars
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitDres
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on @targetBody
		define = PlanetaryLanding
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
		}
	}
}

// *************************** Land on Ceres

CONTRACT_TYPE
{
    name = CeresLanding
    group = UncrewedLanding
	
    title = Land on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 107
	
    notes = Launch a craft to land on @targetBody
    synopsis = Launch a craft to land on @targetBody
	
    description = It is time for us to send a probe to land on @targetBody for science!
		
    completedMessage = Success! Your probe landed on @targetBody and you have returned important scientific data for our scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/ceres
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = double
		lowSMA = HomeWorld().Parent().Children().ElementAt(3).SemiMajorAxis()
		highSMA = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First().SemiMajorAxis()
		title = SMA Values
	}
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() <= @highSMA && cb.SemiMajorAxis() >= @lowSMA && cb.IsPlanet() && cb.HasSurface() && cb != HomeWorld())
		title = Find Planets Between Mars and Jupiter or Duna and Jool
    }
	
	DATA
	{
		type = CelestialBody
		ceres = @/targetBodies.Last()
		title = Find Ceres
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 1
		title = There must be a 2nd planet past Duna-Mars
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitCeres
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on @targetBody
		define = PlanetaryLanding
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
		}
	}
}

// *************************** Land on Jool's Moons / Jupiter's Moons

CONTRACT_TYPE
{
    name = JoolMoonsLanding
    group = UncrewedLanding
	
    title = Land on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 108
	
    notes = Launch a craft to land on the moons of @targetBody
    synopsis = Launch a craft to land on the moons of @targetBody
	
    description = It is time for us to send a probe to land on the moons of @targetBody.
		
    completedMessage = Success! Your probe landed on the moons of @targetBody and you have returned important scientific data for our scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Jupiter
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitJool
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land onthe moons of @targetBody
		define = PlanetaryLanding
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 2
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks4
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Land on Eeloo

CONTRACT_TYPE
{
    name = EelooLanding
    group = UncrewedLanding
	
    title = Land on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 109
	
    notes = Launch an uncrewed craft to land on @targetBody
    synopsis = Launch an uncrewed craft to land on @targetBody
	
    description = It is time for us to send a probe to land on @targetBody for science!
		
    completedMessage = Success! Your probe landed on @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/eeloo
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld() && cb.HasSurface())
		title = Find Surface Planet Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		eeloo = @/targetBodies.ElementAt(0)
		title = First Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on @targetBody
		define = PlanetaryLanding
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
		}
	}
}

// *************************** Land on Saturn's / Sarnus' Moons

CONTRACT_TYPE
{
    name = SaturnMoonsLanding
    group = UncrewedLanding
	
    title = Land on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 110
	
    notes = Launch an uncrewed craft to land on the moons of @targetBody
    synopsis = Launch an uncrewed craft to land on the moons of @targetBody
	
    description = It is time for us to send a probe to land on the moons of @targetBody.
		
    completedMessage = Success! Your probe landed on the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/saturn
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		saturn = @/targetBodies.ElementAt(0)
		title = First Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitSaturn
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land onthe moons of @targetBody
		define = PlanetaryLanding
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 2
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks4
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Land on Uranus / Urlum's Moons

CONTRACT_TYPE
{
    name = UranusMoonsLanding
    group = UncrewedLanding
	
    title = Land on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 111
	
    notes = Launch an uncrewed craft to land on the moons of @targetBody
    synopsis = Launch an uncrewed craft to land on the moons of @targetBody
	
    description = It is time for us to send a probe to land on the moons of @targetBody.
		
    completedMessage = Success! Your probe landed on the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/uranus
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		uranus = @/targetBodies.ElementAt(1)
		title = 2nd Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitUranus
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on the moons of @targetBody
		define = PlanetaryLanding
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 2
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks4
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Land on Neptune / Neidon's Moons

CONTRACT_TYPE
{
    name = NeptuneMoonsLanding
    group = UncrewedLanding
	
    title = Land on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 112
	
    notes = Launch an uncrewed craft to land on the moons of @targetBody
    synopsis = Launch an uncrewed craft to land on the moons of @targetBody
	
    description = It is time for us to send a probe to land on the moons of @targetBody.
		
    completedMessage = Success! Your probe landed on the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/neptune
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		neptune = @/targetBodies.ElementAt(2)
		title = 3rd Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitNeptune
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on the moons of @targetBody
		define = PlanetaryLanding
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 2
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks4
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Land on Pluto / Plock

CONTRACT_TYPE
{
    name = PlutoLanding
    group = UncrewedLanding
	
    title = Land on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 113
	
    notes = Launch an uncrewed craft to land on @targetBody
    synopsis = Launch an uncrewed craft to land on @targetBody
	
    description = It is time for us to send a probe to land on @targetBody for science!
		
    completedMessage = Success! Your probe landed on @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/pluto
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		pluto = @/targetBodies.ElementAt(3)
		title = Fourth Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 3
		title = There must be a 4th planet past @/jupiter
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitPluto
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on @targetBody
		define = PlanetaryLanding
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
		}
	}
}

// *************************** Land on Pluto / Plock's Moon

CONTRACT_TYPE
{
    name = PlutoMoonsLanding
    group = UncrewedLanding
	
    title = Land on the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 114
	
    notes = Launch an uncrewed craft to land on the moons of @targetBody
    synopsis = Launch an uncrewed craft to land on the moons of @targetBody
	
    description = It is time for us to send a probe to land on the moons of @targetBody.
		
    completedMessage = Success! Your probe landed on the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/pluto
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		pluto = @/targetBodies.ElementAt(3)
		title = 4th Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitPluto
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlanetaryLanding
		type = VesselParameterGroup
		title = Land on the moons of @targetBody
		define = PlanetaryLanding
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on @targetBody
            targetBody = @targetMoon
			rewardScience = 2
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks4
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}