// *************************** Moon Orbital Scan

CONTRACT_TYPE
{
	name = BaseMoonScan
    group = SurfaceBases
	
    title = Orbital Scan of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 100
	
    synopsis = Scan @targetBody for a suitable base location
	notes = Scan @targetBody for a suitable base location
	
    description = The next step in our expanse into space is the establishment of a base on @targetBody. In order to make sure we put the base in the best location, we should scan the surface for topography and resource distribution.
	
    completedMessage = Congratulations! The data returned by our orbital scanners will give us the best locations to focus our search.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Moon
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks	
    advanceFunds = @CareerEvolution:Kerbucks
	
	prestige = Trivial
	
	REQUIREMENT:NEEDS[!SCANsat]
	{
		name = MoonOrbitalSurvey
		type = PerformOrbitalSurvey
		invertRequirement = true
		title = The moon has not had an orbital survey
	}
	
	REQUIREMENT:NEEDS[SCANsat]
	{
		name = MoonAltimetryHiRes
		type = SCANsatCoverage
		maxCoverage = 80.0
		scanType = AltimetryHiRes
		title = The moon has not had a High Res Scan
	}
	
	REQUIREMENT:NEEDS[!SCANsat]
	{
		name = OrbitalScannerUnlocked
		type = PartModuleUnlocked
		partModule = ModuleOrbitalSurveyor
		title = Must have an orbital scanner unlocked
	}
	
	REQUIREMENT:NEEDS[SCANsat]
	{
		name = HiResScannerUnlocked
		type = PartUnlocked
		part = SCANsat_Scanner2
		title = Must have an orbital scanner unlocked
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SSOneYear
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonSat
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = BaseMoonScan
		type = VesselParameterGroup
		title = Scan @targetBody
		define = BaseMoonScan
		
		PARAMETER:NEEDS[!SCANsat]
		{
			name = PerformOrbitalSurvey
			type = PerformOrbitalSurvey
			title = Perform an Orbital Survey
			hideChildren = true
		}
		
		PARAMETER:NEEDS[SCANsat]
		{
			name = HiResCoverage
			type = SCANsatCoverage
			coverage = 85.0
			scanType = AltimetryHiRes
		}
	}
}

// *************************** Moon Base Rover

CONTRACT_TYPE
{
	name = BaseMoonScout
    group = SurfaceBases
	
    title = Use a Rover to Scout @targetBody for a Base Location
	agent = Experimental Engineering Group
	
	sortKey = 100
	
    synopsis = Use a Rover to Scout @targetBody for a Base Location
	notes = Use a Rover to Scout @targetBody for a Base Location
	
    description = We have orbital information about the resources on @targetBody, but now we need to refine our search using a rover. Once you find a suitable location, park your rover there and be sure to set the ship type to Rover. This will be the location that is the target for your future base.
	
    completedMessage = Congratulations! You have chosen the spot of your base. The next step is to start building it!
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Moon
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks2
    advanceFunds = @CareerEvolution:Kerbucks2
	
	prestige = Trivial
	
	REQUIREMENT:NEEDS[!SCANsat]
	{
		name = MoonOrbitalSurvey
		type = PerformOrbitalSurvey
		title = The moon has had an orbital survey
	}
	
	REQUIREMENT:NEEDS[SCANsat]
	{
		name = MoonAltimetryHiRes
		type = SCANsatCoverage
		minCoverage = 79.0
		scanType = AltimetryHiRes
		title = The moon has had a High Res Scan
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SSOneYear
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonSat
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = BaseMoonRover
		type = VesselParameterGroup
		title = Find a suitable place for your base by using a rover
		notes = Once you find the site for your base, make sure you change the vessel type to Rover. This is where the next contract will generate your waypoint for the base building.
		defineList = MoonRover
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		
		PARAMETER
		{
			name = LandOnMoon
			type = ReachState
			targetBody = HomeWorld().Children().First()
			situation = LANDED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
		}
		
		PARAMETER
		{
			name = VesselIsRover
			type = VesselIsType
			vesselType = Rover
			title = Change the vessel type to Rover
			hideChildren = true
		}
	}
	
	PARAMETER
	{
		name = ScoutingDuration
		type = Duration
		completeInSequence = true
		duration = 5m
		preWaitText = Searching for suitable site
		waitingText = Surveying Area
		completionText = This is the spot!
	}
}

// *************************** Moon Base Core

CONTRACT_TYPE
{
	name = BaseMoonCore
    group = SurfaceBases
	
    title = Create a Surface Base on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 102
	
    synopsis = Create a new Surface Base on @targetBody near your Scout Rover
	notes = Create a new Surface Base on @targetBody near your Scout Rover
	
    description = You have scanned the surface for resources and have scouted with your rover to choose a location. Now it is time to build your base. You can launch everything at once, or you can build all of the requirements in multiple launches, the choice is yours.
	
    completedMessage = Congratulations! Your base is up and running! Do you have a crew? If not, I'm sure Mission Control will create a mission for you.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Moon
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks5
    advanceFunds = @CareerEvolution:Kerbucks5
	
	prestige = Exceptional
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BaseMoonScout
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonLandingStay
		title = Complete @contractType Contract
	}
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = CONTRACT_ACTIVE
		targetRover = [ MoonRover ].Where(v => v.IsLanded()).Random()
		title = Get the Moon Base Scout Rover
	}
	
	DATA
	{
		type = Location
		roverLocation = @/targetRover.Location()
		hidden = true
		title = Get the Moon Base Scout Rover Location
	}
	
	BEHAVIOUR
	{
		name = MoonBaseWaypoint
		type = WaypointGenerator
		WAYPOINT
		{
			name = Base Landing Spot
			targetBody = HomeWorld().Children().First()
			icon = balloon
			altitude = 0.0
			latitude = @/roverLocation.Latitude()
			longitude = @/roverLocation.Longitude()
		}
	}
	
	PARAMETER
	{
		name = BaseMoonCore
		type = VesselParameterGroup
		title = Build Your @targetBody Base!
		notes = The initial landing spot for your base will be where you left your scout rover. You can choose to fufill all the base requirements with one launch, or you can use multiple launches to get everything you need to create your base.
		defineList = MoonBase
		
		PARAMETER
		{
			name = HasCapacity
			type = HasCrewCapacity
			minCapacity = 3
			title = Space for at least 3 crew
			hideChildren = true
			disableOnStateChange = true
		}
		
		// Have Power Generation
		PARAMETER
		{
			name = PowerGeneration
			type = Any
			title = Have any type of Power Generation on your Station
			disableOnStateChange = true
			
			PARAMETER
			{
				name = PartValidationSolar
				type = PartValidation
				partModule = ModuleDeployableSolarPanel
				minCount = 1
				title = Have at least 1 Solar Panel
				hideChildren = true
			}
			PARAMETER
			{
				name = PartValidationRTG
				type = PartValidation
				partModule = ModuleGenerator
				minCount = 1
				title = Have at least 1 RTG
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureSolar]
			{
				name = PartValidationNFSolar
				type = PartValidation
				partModule = ModuleCurvedSolarPanel
				minCount = 1
				title = Have at least 1 Curved Solar Panel
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNFFission
				type = PartValidation
				partModule = FissionReactor
				minCount = 1
				title = Have at least 1 Fisson Reactor
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNFRTG
				type = PartValidation
				partModule = ModuleRadioisotopeGenerator
				minCount = 1
				title = Have at least 1 Solar Panel
				hideChildren = true
			}
		}
		// Have Science Lab
		PARAMETER
		{
			name = ScienceLab
			type = PartValidation
			title = Have at least one Science Lab on the station
			minCount = 1
			partModule = ModuleScienceLab
			hideChildren = true
			disableOnStateChange = true
		}
		
		PARAMETER
		{
			name = LandAtWaypoint
			type = VisitWaypoint
			index = 0
			distance = 2000.0
			title = Land near @targetBody Scout Rover
			showMessages = true
		}
		
		PARAMETER
		{
			name = LandOnMoon
			type = ReachState
			situation = LANDED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
			hidden = true
		}
		
		PARAMETER
		{
			name = VesselIsBase
			type = VesselIsType
			vesselType = Base
			title = Change the vessel type to Base
			hideChildren = true
		}
	}
}

// *************************** Moon Base Crew

CONTRACT_TYPE
{
	name = BaseMoonCrew
    group = SurfaceBases
	
    title = Send a full crew to your Space Station on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 103
	
    synopsis = Send a full crew to your Space Station on @targetBody
	notes = Send a full crew to your Space Station on @targetBody
	
    description = Your base is up and running, and you might even have some crew there already, but we need you to make sure that you have a full crew. When your station is full, walk outside and Plant a Flag to stake your claim as @targetBody Station Expedition 1.
	
    completedMessage = Congratulations! Your base is running smoothly with your crew! You can continue to add to your base, run some routine maintenance missions, or you can start on bases elsewhere.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Moon
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks2
    advanceFunds = @CareerEvolution:Kerbucks2
	
	prestige = Significant
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BaseMoonCore
		title = Complete @contractType Contract
	}
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ALL
		targetBase = [ MoonBase ].Where(v => v.VesselType() == Base && v.IsLanded() == true).Random()
		title = Get the Moon Base
	}
	
	DATA
	{
		type = Location
		baseLocation = @/targetBase.Location()
		hidden = true
		title = Get the Moon Base Location
	}
	
	DATA
	{
		type = int
		requiredValue = true
		baseCrewCapacity = @/targetBase.CrewCapacity()
		title = What is the capacity of the base?
	}
	
	PARAMETER
	{
		name = BaseMoonCrew
		type = VesselParameterGroup
		title = Fill your station with Crew
		notes = If your station is already filled, just EVA a Kerbal to Plant a Flag for Expedition 1.
		vessel = @/targetBase
		
		PARAMETER
		{
			name = FullCrew
			type = HasCrew
			minCrew = @/baseCrewCapacity
			title = Have a full crew of @minCrew
			hideChildren = true
			disableOnStateChange = true
		}
	}
	
	PARAMETER
	{
		name = FlagExpedition1
		type = PlantFlag
		title = Plant a flag for Expedition 1
		hideChildren = true
	}
}

// *************************** Minmus Orbital Scan

CONTRACT_TYPE
{
	name = BaseMinmusScan
    group = SurfaceBases
	
    title = Orbital Scan of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 104
	
    synopsis = Scan @targetBody for a suitable base location
	notes = Scan @targetBody for a suitable base location
	
    description = We have built a base on @CareerEvolution:Moon and now we want to expand with a base on @targetBody. In order to make sure we put the base in the best location, we should scan the surface for topography and resource distribution.
	
    completedMessage = Congratulations! The data returned by our orbital scanners will give us the best locations to focus our search.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Minmus
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks	
    advanceFunds = @CareerEvolution:Kerbucks
	
	prestige = Trivial
	
	REQUIREMENT
	{
		name = TwoMoons
		type = Expression
		expression = HomeWorld().Children().Count() > 1
		title = The Home World must have 2 moons
	}
	
	REQUIREMENT:NEEDS[!SCANsat]
	{
		name = MoonOrbitalSurvey
		type = PerformOrbitalSurvey
		invertRequirement = true
		title = The moon has not had an orbital survey
	}
	
	REQUIREMENT:NEEDS[SCANsat]
	{
		name = MoonAltimetryHiRes
		type = SCANsatCoverage
		maxCoverage = 80.0
		scanType = AltimetryHiRes
		title = The moon has not had a High Res Scan
	}
	
	REQUIREMENT:NEEDS[!SCANsat]
	{
		name = OrbitalScannerUnlocked
		type = PartModuleUnlocked
		partModule = ModuleOrbitalSurveyor
		title = Must have an orbital scanner unlocked
	}
	
	REQUIREMENT:NEEDS[SCANsat]
	{
		name = HiResScannerUnlocked
		type = PartUnlocked
		part = SCANsat_Scanner2
		title = Must have an orbital scanner unlocked
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BaseMoonCore
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MinmusSat
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = BaseMoonScan
		type = VesselParameterGroup
		title = Scan @targetBody
		define = BaseMinmusScan
		
		PARAMETER:NEEDS[!SCANsat]
		{
			name = PerformOrbitalSurvey
			type = PerformOrbitalSurvey
			title = Perform an Orbital Survey
			hideChildren = true
		}
		
		PARAMETER:NEEDS[SCANsat]
		{
			name = HiResCoverage
			type = SCANsatCoverage
			coverage = 85.0
			scanType = AltimetryHiRes
		}
	}
}

// *************************** Minmus Base Rover

CONTRACT_TYPE
{
	name = BaseMinmusScout
    group = SurfaceBases
	
    title = Use a Rover to Scout @targetBody for a Base Location
	agent = Experimental Engineering Group
	
	sortKey = 105
	
    synopsis = Use a Rover to Scout @targetBody for a Base Location
	notes = Use a Rover to Scout @targetBody for a Base Location
	
    description = We have orbital information about the resources on @targetBody, but now we need to refine our search using a rover. Once you find a suitable location, park your rover there and be sure to set the ship type to Rover. This will be the location that is the target for your future base.
	
    completedMessage = Congratulations! You have chosen the spot of your base. The next step is to start building it!
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Minmus
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks2
    advanceFunds = @CareerEvolution:Kerbucks2
	
	prestige = Trivial
	
	REQUIREMENT
	{
		name = TwoMoons
		type = Expression
		expression = HomeWorld().Children().Count() > 1
		title = The Home World must have 2 moons
	}
	
	REQUIREMENT:NEEDS[!SCANsat]
	{
		name = MoonOrbitalSurvey
		type = PerformOrbitalSurvey
		title = The moon has had an orbital survey
	}
	
	REQUIREMENT:NEEDS[SCANsat]
	{
		name = MoonAltimetryHiRes
		type = SCANsatCoverage
		minCoverage = 79.0
		scanType = AltimetryHiRes
		title = The moon has had a High Res Scan
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BaseMoonCrew
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MinmusSat
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = BaseMinmusRover
		type = VesselParameterGroup
		title = Find a suitable place for your base by using a rover
		notes = Once you find the site for your base, make sure you change the vessel type to Rover. This is where the next contract will generate your waypoint for the base building.
		defineList = MinmusRover
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		
		PARAMETER
		{
			name = LandOnMoon
			type = ReachState
			situation = LANDED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
		}
		
		PARAMETER
		{
			name = VesselIsRover
			type = VesselIsType
			vesselType = Rover
			title = Change the vessel type to Rover
			hideChildren = true
		}
	}
	
	PARAMETER
	{
		name = ScoutingDuration
		type = Duration
		completeInSequence = true
		duration = 5m
		preWaitText = Searching for suitable site
		waitingText = Surveying Area
		completionText = This is the spot!
	}
}

// *************************** Minmus Base Core

CONTRACT_TYPE
{
	name = BaseMinmusCore
    group = SurfaceBases
	
    title = Create a Surface Base on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 106
	
    synopsis = Create a new Surface Base on @targetBody near your Scout Rover
	notes = Create a new Surface Base on @targetBody near your Scout Rover
	
    description = You have scanned the surface for resources and have scouted with your rover to choose a location. Now it is time to build your base. You can launch everything at once, or you can build all of the requirements in multiple launches, the choice is yours.
	
    completedMessage = Congratulations! Your base is up and running! Do you have a crew? If not, I'm sure Mission Control will create a mission for you.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Minmus
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks5
    advanceFunds = @CareerEvolution:Kerbucks5
	
	prestige = Exceptional
	
	REQUIREMENT
	{
		name = TwoMoons
		type = Expression
		expression = HomeWorld().Children().Count() > 1
		title = The Home World must have 2 moons
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BaseMinmusScout
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MinmusLandingStay
		title = Complete @contractType Contract
	}
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ALL
		targetRover = [ MinmusRover ].Where(v => v.VesselType() == Rover && v.IsLanded() == true).SelectUnique()
		title = Get the Minmus Base Scout Rover
	}
	
	DATA
	{
		type = Location
		roverLocation = @/targetRover.Location()
		hidden = true
		title = Get the moon Base Scout Rover Location
	}
	
	BEHAVIOUR
	{
		name = MoonBaseWaypoint
		type = WaypointGenerator
		WAYPOINT
		{
			name = Base Landing Spot
			icon = balloon
			altitude = 0.0
			latitude = @/roverLocation.Latitude()
			longitude = @/roverLocation.Longitude()
		}
	}
	
	PARAMETER
	{
		name = BaseMoonCore
		type = VesselParameterGroup
		title = Build Your @targetBody Base!
		notes = The initial landing spot for your base will be where you left your scout rover. You can choose to fufill all the base requirements with one launch, or you can use multiple launches to get everything you need to create your base.
		defineList = MinmusBase
		
		PARAMETER
		{
			name = HasCapacity
			type = HasCrewCapacity
			minCapacity = 3
			title = Space for at least 3 crew
			hideChildren = true
			disableOnStateChange = true
		}
		
		// Have Power Generation
		PARAMETER
		{
			name = PowerGeneration
			type = Any
			title = Have any type of Power Generation on your Station
			disableOnStateChange = true
			
			PARAMETER
			{
				name = PartValidationSolar
				type = PartValidation
				partModule = ModuleDeployableSolarPanel
				minCount = 1
				title = Have at least 1 Solar Panel
				hideChildren = true
			}
			PARAMETER
			{
				name = PartValidationRTG
				type = PartValidation
				partModule = ModuleGenerator
				minCount = 1
				title = Have at least 1 RTG
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureSolar]
			{
				name = PartValidationNFSolar
				type = PartValidation
				partModule = ModuleCurvedSolarPanel
				minCount = 1
				title = Have at least 1 Curved Solar Panel
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNFFission
				type = PartValidation
				partModule = FissionReactor
				minCount = 1
				title = Have at least 1 Fisson Reactor
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNFRTG
				type = PartValidation
				partModule = ModuleRadioisotopeGenerator
				minCount = 1
				title = Have at least 1 Solar Panel
				hideChildren = true
			}
		}
		// Have Science Lab
		PARAMETER
		{
			name = ScienceLab
			type = PartValidation
			title = Have at least one Science Lab on the station
			minCount = 1
			partModule = ModuleScienceLab
			hideChildren = true
			disableOnStateChange = true
		}
		
		PARAMETER
		{
			name = LandAtWaypoint
			type = VisitWaypoint
			index = 0
			distance = 2000.0
			title = Land near @targetBody Scout Rover
			showMessages = true
		}
		
		PARAMETER
		{
			name = LandOnMoon
			type = ReachState
			situation = LANDED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
			hidden = true
		}
		
		PARAMETER
		{
			name = VesselIsBase
			type = VesselIsType
			vesselType = Base
			title = Change the vessel type to Base
			hideChildren = true
		}
	}
}

// *************************** Minmus Base Crew

CONTRACT_TYPE
{
	name = BaseMinmusCrew
    group = SurfaceBases
	
    title = Send a full crew to your Space Station on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 107
	
    synopsis = Send a full crew to your Space Station on @targetBody
	notes = Send a full crew to your Space Station on @targetBody
	
    description = Your base is up and running, and you might even have some crew there already, but we need you to make sure that you have a full crew. When your station is full, walk outside and Plant a Flag to stake your claim as @targetBody Station Expedition 1.
	
    completedMessage = Congratulations! Your base is running smoothly with your crew! You can continue to add to your base, run some routine maintenance missions, or you can start on bases elsewhere.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Minmus
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks2
    advanceFunds = @CareerEvolution:Kerbucks2
	
	prestige = Significant
	
	REQUIREMENT
	{
		name = TwoMoons
		type = Expression
		expression = HomeWorld().Children().Count() > 1
		title = The Home World must have 2 moons
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BaseMinmusCore
		title = Complete @contractType Contract
	}
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ALL
		targetBase = [ MinmusBase ].Where(v => v.VesselType() == Base && v.IsLanded() == true).SelectUnique()
		title = Get the Moon Base
	}
	
	DATA
	{
		type = Location
		baseLocation = @/targetBase.Location()
		hidden = true
		title = Get the Moon Base Location
	}
	
	DATA
	{
		type = int
		requiredValue = true
		baseCrewCapacity = @/targetBase.CrewCapacity()
		title = What is the capacity of the base?
	}
	
	PARAMETER
	{
		name = BaseMoonCrew
		type = VesselParameterGroup
		title = Fill your station with Crew
		notes = If your station is already filled, just EVA a Kerbal to Plant a Flag for Expedition 1.
		vessel = @/targetBase
		
		PARAMETER
		{
			name = FullCrew
			type = HasCrew
			minCrew = @/baseCrewCapacity
			title = Have a full crew of @minCrew
			hideChildren = true
			disableOnStateChange = true
		}
	}
	
	PARAMETER
	{
		name = FlagExpedition1
		type = PlantFlag
		title = Plant a flag for Expedition 1
		hideChildren = true
	}
}

// *************************** Duna Orbital Scan

CONTRACT_TYPE
{
	name = BaseDunaScan
    group = SurfaceBases
	
    title = Orbital Scan of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 108
	
    synopsis = Scan @targetBody for a suitable base location
	notes = Scan @targetBody for a suitable base location
	
    description = The next step in our expanse into space is the establishment of a base on @targetBody. In order to make sure we put the base in the best location, we should scan the surface for topography and resource distribution.
	
    completedMessage = Congratulations! The data returned by our orbital scanners will give us the best locations to focus our search.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mars
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks	
    advanceFunds = @CareerEvolution:Kerbucks
	
	prestige = Trivial
	
	REQUIREMENT:NEEDS[!SCANsat]
	{
		name = MoonOrbitalSurvey
		type = PerformOrbitalSurvey
		invertRequirement = true
		title = The planet has not had an orbital survey
	}
	
	REQUIREMENT:NEEDS[SCANsat]
	{
		name = MoonAltimetryHiRes
		type = SCANsatCoverage
		maxCoverage = 80.0
		scanType = AltimetryHiRes
		title = The planet has not had a High Res Scan
	}
	
	REQUIREMENT:NEEDS[!SCANsat]
	{
		name = OrbitalScannerUnlocked
		type = PartModuleUnlocked
		partModule = ModuleOrbitalSurveyor
		title = Must have an orbital scanner unlocked
	}
	
	REQUIREMENT:NEEDS[SCANsat]
	{
		name = HiResScannerUnlocked
		type = PartUnlocked
		part = SCANsat_Scanner2
		title = Must have an orbital scanner unlocked
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BaseMoonCore
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = BaseDunaScan
		type = VesselParameterGroup
		title = Scan @targetBody
		define = BaseDunaScan
		
		PARAMETER:NEEDS[!SCANsat]
		{
			name = PerformOrbitalSurvey
			type = PerformOrbitalSurvey
			title = Perform an Orbital Survey
			hideChildren = true
		}
		
		PARAMETER:NEEDS[SCANsat]
		{
			name = HiResCoverage
			type = SCANsatCoverage
			coverage = 85.0
			scanType = AltimetryHiRes
		}
	}
}

// *************************** Duna Base Rover

CONTRACT_TYPE
{
	name = BaseDunaScout
    group = SurfaceBases
	
    title = Use a Rover to Scout @targetBody for a Base Location
	agent = Experimental Engineering Group
	
	sortKey = 109
	
    synopsis = Use a Rover to Scout @targetBody for a Base Location
	notes = Use a Rover to Scout @targetBody for a Base Location
	
    description = We have orbital information about the resources on @targetBody, but now we need to refine our search using a rover. Once you find a suitable location, park your rover there and be sure to set the ship type to Rover. This will be the location that is the target for your future base.
	
    completedMessage = Congratulations! You have chosen the spot of your base. The next step is to start building it!
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mars
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks2
    advanceFunds = @CareerEvolution:Kerbucks2
	
	prestige = Trivial
	
	REQUIREMENT:NEEDS[!SCANsat]
	{
		name = PlanetOrbitalSurvey
		type = PerformOrbitalSurvey
		title = The planet has had an orbital survey
	}
	
	REQUIREMENT:NEEDS[SCANsat]
	{
		name = PlanetAltimetryHiRes
		type = SCANsatCoverage
		minCoverage = 79.0
		scanType = AltimetryHiRes
		title = The planet has had a High Res Scan
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BaseMoonCrew
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = BaseMoonRover
		type = VesselParameterGroup
		title = Find a suitable place for your base by using a rover
		notes = Once you find the site for your base, make sure you change the vessel type to Rover. This is where the next contract will generate your waypoint for the base building.
		defineList = DunaRover
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		
		PARAMETER
		{
			name = LandOnMars
			type = ReachState
			situation = LANDED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
		}
		
		PARAMETER
		{
			name = VesselIsRover
			type = VesselIsType
			vesselType = Rover
			title = Change the vessel type to Rover
			hideChildren = true
		}
	}
	
	PARAMETER
	{
		name = ScoutingDuration
		type = Duration
		completeInSequence = true
		duration = 5m
		preWaitText = Searching for suitable site
		waitingText = Surveying Area
		completionText = This is the spot!
	}
}

// *************************** Duna Base Core

CONTRACT_TYPE
{
	name = BaseDunaCore
    group = SurfaceBases
	
    title = Create a Surface Base on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 110
	
    synopsis = Create a new Surface Base on @targetBody near your Scout Rover
	notes = Create a new Surface Base on @targetBody near your Scout Rover
	
    description = You have scanned the surface for resources and have scouted with your rover to choose a location. Now it is time to build your base. You can launch everything at once, or you can build all of the requirements in multiple launches, the choice is yours.
	
    completedMessage = Congratulations! Your base is up and running! Do you have a crew? If not, I'm sure Mission Control will create a mission for you.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mars
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks5
    advanceFunds = @CareerEvolution:Kerbucks5
	
	prestige = Exceptional
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BaseDunaScout
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaLanding-Crew
		title = Complete @contractType Contract
	}
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ALL
		targetRover = [ DunaRover ].Where(v => v.VesselType() == Rover && v.IsLanded() == true).SelectUnique()
		title = Get the Duna Base Scout Rover
	}
	
	DATA
	{
		type = Location
		roverLocation = @/targetRover.Location()
		hidden = true
		title = Get the Duna Base Scout Rover Location
	}
	
	BEHAVIOUR
	{
		name = DunaBaseWaypoint
		type = WaypointGenerator
		WAYPOINT
		{
			name = Base Landing Spot
			icon = balloon
			altitude = 0.0
			latitude = @/roverLocation.Latitude()
			longitude = @/roverLocation.Longitude()
		}
	}
	
	PARAMETER
	{
		name = BaseDunaCore
		type = VesselParameterGroup
		title = Build Your @targetBody Base!
		notes = The initial landing spot for your base will be where you left your scout rover. You can choose to fufill all the base requirements with one launch, or you can use multiple launches to get everything you need to create your base.
		defineList = DunaBase
		
		PARAMETER
		{
			name = HasCapacity
			type = HasCrewCapacity
			minCapacity = 3
			title = Space for at least 3 crew
			hideChildren = true
			disableOnStateChange = true
		}
		
		// Have Power Generation
		PARAMETER
		{
			name = PowerGeneration
			type = Any
			title = Have any type of Power Generation on your Station
			disableOnStateChange = true
			
			PARAMETER
			{
				name = PartValidationSolar
				type = PartValidation
				partModule = ModuleDeployableSolarPanel
				minCount = 1
				title = Have at least 1 Solar Panel
				hideChildren = true
			}
			PARAMETER
			{
				name = PartValidationRTG
				type = PartValidation
				partModule = ModuleGenerator
				minCount = 1
				title = Have at least 1 RTG
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureSolar]
			{
				name = PartValidationNFSolar
				type = PartValidation
				partModule = ModuleCurvedSolarPanel
				minCount = 1
				title = Have at least 1 Curved Solar Panel
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNFFission
				type = PartValidation
				partModule = FissionReactor
				minCount = 1
				title = Have at least 1 Fisson Reactor
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNFRTG
				type = PartValidation
				partModule = ModuleRadioisotopeGenerator
				minCount = 1
				title = Have at least 1 Solar Panel
				hideChildren = true
			}
		}
		// Have Science Lab
		PARAMETER
		{
			name = ScienceLab
			type = PartValidation
			title = Have at least one Science Lab on the station
			minCount = 1
			partModule = ModuleScienceLab
			hideChildren = true
			disableOnStateChange = true
		}
		
		PARAMETER
		{
			name = LandAtWaypoint
			type = VisitWaypoint
			index = 0
			distance = 2000.0
			title = Land near @targetBody Scout Rover
			showMessages = true
		}
		
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
			hidden = true
		}
		
		PARAMETER
		{
			name = VesselIsBase
			type = VesselIsType
			vesselType = Base
			title = Change the vessel type to Base
			hideChildren = true
		}
	}
}

// *************************** Duna Base Crew

CONTRACT_TYPE
{
	name = BaseDunaCrew
    group = SurfaceBases
	
    title = Send a full crew to your Space Station on @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 111
	
    synopsis = Send a full crew to your Space Station on @targetBody
	notes = Send a full crew to your Space Station on @targetBody
	
    description = Your base is up and running, and you might even have some crew there already, but we need you to make sure that you have a full crew. When your station is full, walk outside and Plant a Flag to stake your claim as @targetBody Station Expedition 1.
	
    completedMessage = Congratulations! Your base is running smoothly with your crew! You can continue to add to your base, run some routine maintenance missions, or you can start on bases elsewhere.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mars
	
	// REWARDS
    rewardScience = 1
    rewardReputation = 1
    rewardFunds = @CareerEvolution:Kerbucks2
    advanceFunds = @CareerEvolution:Kerbucks2
	
	prestige = Significant
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BaseDunaCore
		title = Complete @contractType Contract
	}
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ALL
		targetBase = [ DunaBase ].Where(v => v.VesselType() == Base && v.IsLanded() == true).SelectUnique()
		title = Get the Duna Base
	}
	
	DATA
	{
		type = Location
		baseLocation = @/targetBase.Location()
		hidden = true
		title = Get the Duna Base Location
	}
	
	DATA
	{
		type = int
		requiredValue = true
		baseCrewCapacity = @/targetBase.CrewCapacity()
		title = What is the capacity of the base?
	}
	
	PARAMETER
	{
		name = BaseDunaCrew
		type = VesselParameterGroup
		title = Fill your station with Crew
		notes = If your station is already filled, just EVA a Kerbal to Plant a Flag for Expedition 1.
		vessel = @/targetBase
		
		PARAMETER
		{
			name = FullCrew
			type = HasCrew
			minCrew = @/baseCrewCapacity
			title = Have a full crew of @minCrew
			hideChildren = true
			disableOnStateChange = true
		}
	}
	
	PARAMETER
	{
		name = FlagExpedition1
		type = PlantFlag
		title = Plant a flag for Expedition 1
		hideChildren = true
	}
}