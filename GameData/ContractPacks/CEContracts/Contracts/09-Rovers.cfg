// *************************** Eve Rover

CONTRACT_TYPE
{
	name = EveRover
    group = Rovers
	
    title = Land a rover on @/targetBody
	agent = Experimental Engineering Group
	
	sortKey = 100
	
    synopsis = Send a rover to @/targetBody
	notes = Send a rover to @/targetBody
	
    description = We could send a crew to @/targetBody, but that is dangerous, let's send the next best thing! We need to land a rover on @/targetBody.
	
    completedMessage = Congratulations! Now that our rover is landed safely and communicating back to us, let's do some science!
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Venus
	
	// REWARDS
    rewardScience = 0
    rewardReputation = 0
    rewardFunds = 0
	
    advanceFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyEve
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonRover
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = EveRover
		type = VesselParameterGroup
		title = Rover
		define = EveRover
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			hideChildren = true
			title = Uncrewed
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			title = Land your rover on @/targetBody
		}
		PARAMETER
		{
			name = VesselIsRover
			type = VesselIsType
			vesselType = Rover
			title = Set your vessel type to Rover
		}
	}
}

CONTRACT_TYPE
{
	name = EveRoverDrive
    group = Rovers
	
    title = Explore @/targetBody with a Rover
	agent = Experimental Engineering Group
	
	sortKey = 101
	
    synopsis = Use @/targetVessel to explore @/targetBody
	notes = Use @/targetVessel to explore @/targetBody
	
    description = Use the rover you have on @/targetBody to visit the waypoints that our scientists are interested in.
	
    completedMessage = Congratulations! As long as the Rover continues to operate, our scientists will continue to receive valuable information about @/targetBody.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = false
	autoAccept = true
	
    targetBody = @CareerEvolution:Venus
	
	// REWARDS
    rewardScience = 5
    rewardReputation = 12
    rewardFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ALL
		targetVessel = AllVessels().Where(v => v.VesselType() == Rover && v.IsLanded() == true && v.CelestialBody() == @targetBody).SelectUnique()
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EveRover
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = EveRoverDrive
		type = VesselParameterGroup
		title = Rover Drive
		
		PARAMETER
		{
			name = WaypointAlpha
			type = VisitWaypoint
			index = 0
			distance = 100.0
			title = Visit Rover Site Alpha
			showMessages = true
			disableOnStateChange = true
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointBeta
			type = VisitWaypoint
			index = 1
			distance = 100.0
			title = Visit Rover Site Beta
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointCharlie
			type = VisitWaypoint
			index = 2
			distance = 100.0
			title = Visit Rover Site Charlie
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}
	}
	
	BEHAVIOUR
	{
		name = RoverDialog
		type = DialogBox
		
		DIALOG_BOX
		{
			title = New Rover Contract Accepted
			condition = CONTRACT_ACCEPTED
		
			position = center
		
			titleColor = #FFFFFF
			TEXT
			{
				text = You have successfully landed your rover and a new contract has been automatically accepted for you. In this contract, you will use your rover to explore sites near you.
			}
		}
	}
	
	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator

		WAYPOINT
		{
			name = Rover Location
			hidden = true
			
			icon = report
			altitude = 0.0
			latitude = @/targetVessel.Location().Latitude()
			longitude = @/targetVessel.Location().Longitude()			
		}
		
		RANDOM_WAYPOINT_NEAR
		{
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 0
			minDistance = 500.0
			maxDistance = 1000.0
		}

		RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Beta
			parameter = WaypointAlpha
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 1
			minDistance = 500.0
			maxDistance = 1000.0
		}
	   RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Charlie
			parameter = WaypointBeta
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 2
			minDistance = 500.0
			maxDistance = 2000.0
		}
	}
}

// *************************** Duna Rover

CONTRACT_TYPE
{
	name = DunaRover
    group = Rovers
	
    title = Land a rover on @/targetBody
	agent = Experimental Engineering Group
	
	sortKey = 102
	
    synopsis = Send a rover to @/targetBody
	notes = Send a rover to @/targetBody
	
    description = We could send a crew to @/targetBody, but that is dangerous, let's send the next best thing! We need to land a rover on @/targetBody.
	
    completedMessage = Congratulations! Now that our rover is landed safely and communicating back to us, let's do some science!
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mars
	
	// REWARDS
    rewardScience = 0
    rewardReputation = 0
    rewardFunds = 0
	
    advanceFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyDuna
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonRover
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = DunaRover
		type = VesselParameterGroup
		title = Rover
		define = DunaRover
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			hideChildren = true
			title = Uncrewed
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			title = Land your rover on @/targetBody
		}
		PARAMETER
		{
			name = VesselIsRover
			type = VesselIsType
			vesselType = Rover
			title = Set your vessel type to Rover
		}
	}
}

CONTRACT_TYPE
{
	name = DunaRoverDrive
    group = Rovers
	
    title = Explore @/targetBody with a Rover
	agent = Experimental Engineering Group
	
	sortKey = 103
	
    synopsis = Use @/targetVessel to explore @/targetBody
	notes = Use @/targetVessel to explore @/targetBody
	
    description = Use the rover you have on @/targetBody to visit the waypoints that our scientists are interested in.
	
    completedMessage = Congratulations! As long as the Rover continues to operate, our scientists will continue to receive valuable information about @/targetBody.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = false
	autoAccept = true
	
    targetBody = @CareerEvolution:Mars
	
	// REWARDS
    rewardScience = 5
    rewardReputation = 12
    rewardFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ALL
		targetVessel = AllVessels().Where(v => v.VesselType() == Rover && v.IsLanded() == true && v.CelestialBody() == @targetBody).SelectUnique()
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DunaRover
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = DunaRoverDrive
		type = VesselParameterGroup
		title = Rover Drive
		
		PARAMETER
		{
			name = WaypointAlpha
			type = VisitWaypoint
			index = 0
			distance = 100.0
			title = Visit Rover Site Alpha
			showMessages = true
			disableOnStateChange = true
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointBeta
			type = VisitWaypoint
			index = 1
			distance = 100.0
			title = Visit Rover Site Beta
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointCharlie
			type = VisitWaypoint
			index = 2
			distance = 100.0
			title = Visit Rover Site Charlie
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}
	}
	
	BEHAVIOUR
	{
		name = RoverDialog
		type = DialogBox
		
		DIALOG_BOX
		{
			title = New Rover Contract Accepted
			condition = CONTRACT_ACCEPTED
		
			position = center
		
			titleColor = #FFFFFF
			TEXT
			{
				text = You have successfully landed your rover and a new contract has been automatically accepted for you. In this contract, you will use your rover to explore sites near you.
			}
		}
	}
	
	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator

		WAYPOINT
		{
			name = Rover Location
			hidden = true
			
			icon = report
			altitude = 0.0
			latitude = @/targetVessel.Location().Latitude()
			longitude = @/targetVessel.Location().Longitude()			
		}
		
		RANDOM_WAYPOINT_NEAR
		{
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 0
			minDistance = 500.0
			maxDistance = 1000.0
		}

		RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Beta
			parameter = WaypointAlpha
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 1
			minDistance = 500.0
			maxDistance = 1000.0
		}
	   RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Charlie
			parameter = WaypointBeta
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 2
			minDistance = 500.0
			maxDistance = 2000.0
		}
	}
}

// *************************** Ceres Rover

CONTRACT_TYPE
{
	name = CeresRover
    group = Rovers
	
    title = Land a rover on @/targetBody
	agent = Experimental Engineering Group
	
	sortKey = 104
	
    synopsis = Send a rover to @/targetBody
	notes = Send a rover to @/targetBody
	
    description = We could send a crew to @/targetBody, but that is dangerous, let's send the next best thing! We need to land a rover on @/targetBody.
	
    completedMessage = Congratulations! Now that our rover is landed safely and communicating back to us, let's do some science!
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/ceres
	
	// REWARDS
    rewardScience = 0
    rewardReputation = 0
    rewardFunds = 0
	
    advanceFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	
	DATA
	{
		type = double
		lowSMA = HomeWorld().Parent().Children().ElementAt(3).SemiMajorAxis()
		highSMA = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First().SemiMajorAxis()
		title = SMA Values
	}
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() <= @highSMA && cb.SemiMajorAxis() >= @lowSMA && cb.IsPlanet() && cb.HasSurface() && cb != HomeWorld())
		title = Find Planets Between Mars and Jupiter or Duna and Jool
    }
	
	DATA
	{
		type = CelestialBody
		ceres = @/targetBodies.Last()
		title = Find Ceres
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 1
		title = There must be a 2nd planet past Duna-Mars
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyCeres
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = CeresRover
		type = VesselParameterGroup
		title = Rover
		define = CeresRover
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			hideChildren = true
			title = Uncrewed
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			title = Land your rover on @/targetBody
		}
		PARAMETER
		{
			name = VesselIsRover
			type = VesselIsType
			vesselType = Rover
			title = Set your vessel type to Rover
		}
	}
}

CONTRACT_TYPE
{
	name = CeresRoverDrive
    group = Rovers
	
    title = Explore @/targetBody with a Rover
	agent = Experimental Engineering Group
	
	sortKey = 105
	
    synopsis = Use @/targetVessel to explore @/targetBody
	notes = Use @/targetVessel to explore @/targetBody
	
    description = Use the rover you have on @/targetBody to visit the waypoints that our scientists are interested in.
	
    completedMessage = Congratulations! As long as the Rover continues to operate, our scientists will continue to receive valuable information about @/targetBody.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = false
	autoAccept = true
	
    targetBody = @/ceres
	
	// REWARDS
    rewardScience = 5
    rewardReputation = 12
    rewardFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	DATA
	{
		type = double
		lowSMA = HomeWorld().Parent().Children().ElementAt(3).SemiMajorAxis()
		highSMA = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First().SemiMajorAxis()
		title = SMA Values
	}
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() <= @highSMA && cb.SemiMajorAxis() >= @lowSMA && cb.IsPlanet() && cb.HasSurface() && cb != HomeWorld())
		title = Find Planets Between Mars and Jupiter or Duna and Jool
    }
	
	DATA
	{
		type = CelestialBody
		ceres = @/targetBodies.Last()
		title = Find Ceres
	}
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ALL
		targetVessel = AllVessels().Where(v => v.VesselType() == Rover && v.IsLanded() == true && v.CelestialBody() == @targetBody).SelectUnique()
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = CeresRover
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = CeresRoverDrive
		type = VesselParameterGroup
		title = Rover Drive
		
		PARAMETER
		{
			name = WaypointAlpha
			type = VisitWaypoint
			index = 0
			distance = 100.0
			title = Visit Rover Site Alpha
			showMessages = true
			disableOnStateChange = true
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointBeta
			type = VisitWaypoint
			index = 1
			distance = 100.0
			title = Visit Rover Site Beta
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointCharlie
			type = VisitWaypoint
			index = 2
			distance = 100.0
			title = Visit Rover Site Charlie
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}
	}
	
	BEHAVIOUR
	{
		name = RoverDialog
		type = DialogBox
		
		DIALOG_BOX
		{
			title = New Rover Contract Accepted
			condition = CONTRACT_ACCEPTED
		
			position = center
		
			titleColor = #FFFFFF
			TEXT
			{
				text = You have successfully landed your rover and a new contract has been automatically accepted for you. In this contract, you will use your rover to explore sites near you.
			}
		}
	}
	
	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator

		WAYPOINT
		{
			name = Rover Location
			hidden = true
			
			icon = report
			altitude = 0.0
			latitude = @/targetVessel.Location().Latitude()
			longitude = @/targetVessel.Location().Longitude()			
		}
		
		RANDOM_WAYPOINT_NEAR
		{
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 0
			minDistance = 500.0
			maxDistance = 1000.0
		}

		RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Beta
			parameter = WaypointAlpha
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 1
			minDistance = 500.0
			maxDistance = 1000.0
		}
	   RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Charlie
			parameter = WaypointBeta
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 2
			minDistance = 500.0
			maxDistance = 2000.0
		}
	}
}

// *************************** Dres Rover

CONTRACT_TYPE
{
	name = DresRover
    group = Rovers
	
    title = Land a rover on @/targetBody
	agent = Experimental Engineering Group
	
	sortKey = 106
	
    synopsis = Send a rover to @/targetBody
	notes = Send a rover to @/targetBody
	
    description = We could send a crew to @/targetBody, but that is dangerous, let's send the next best thing! We need to land a rover on @/targetBody.
	
    completedMessage = Congratulations! Now that our rover is landed safely and communicating back to us, let's do some science!
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/dres
	
	// REWARDS
    rewardScience = 0
    rewardReputation = 0
    rewardFunds = 0
	
    advanceFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	
	DATA
	{
		type = double
		lowSMA = HomeWorld().Parent().Children().ElementAt(3).SemiMajorAxis() + 1
		highSMA = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First().SemiMajorAxis()
		title = SMA Values
	}
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() <= @highSMA && cb.SemiMajorAxis() >= @lowSMA && cb.IsPlanet() && cb.HasSurface() && cb != HomeWorld())
		title = Find Planets Between Mars and Jupiter or Duna and Jool
    }
	
	DATA
	{
		type = CelestialBody
		dres = @/targetBodies.First()
		title = Find Dres
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 0
		title = There must be a 2nd planet past Duna-Mars
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyDres
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = DresRover
		type = VesselParameterGroup
		title = Rover
		define = DresRover
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			hideChildren = true
			title = Uncrewed
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			title = Land your rover on @/targetBody
		}
		PARAMETER
		{
			name = VesselIsRover
			type = VesselIsType
			vesselType = Rover
			title = Set your vessel type to Rover
		}
	}
}

CONTRACT_TYPE
{
	name = DresRoverDrive
    group = Rovers
	
    title = Explore @/targetBody with a Rover
	agent = Experimental Engineering Group
	
	sortKey = 107
	
    synopsis = Use @/targetVessel to explore @/targetBody
	notes = Use @/targetVessel to explore @/targetBody
	
    description = Use the rover you have on @/targetBody to visit the waypoints that our scientists are interested in.
	
    completedMessage = Congratulations! As long as the Rover continues to operate, our scientists will continue to receive valuable information about @/targetBody.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = false
	autoAccept = true
	
    targetBody = @/dres
	
	// REWARDS
    rewardScience = 5
    rewardReputation = 12
    rewardFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	
	DATA
	{
		type = double
		lowSMA = HomeWorld().Parent().Children().ElementAt(3).SemiMajorAxis() + 1
		highSMA = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First().SemiMajorAxis()
		title = SMA Values
	}
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() <= @highSMA && cb.SemiMajorAxis() >= @lowSMA && cb.IsPlanet() && cb.HasSurface() && cb != HomeWorld())
		title = Find Planets Between Mars and Jupiter or Duna and Jool
    }
	
	DATA
	{
		type = CelestialBody
		dres = @/targetBodies.First()
		title = Find Dres
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 0
		title = There must be a 2nd planet past Duna-Mars
	}
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ALL
		targetVessel = AllVessels().Where(v => v.VesselType() == Rover && v.IsLanded() == true && v.CelestialBody() == @targetBody).SelectUnique()
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = DresRover
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = DresRoverDrive
		type = VesselParameterGroup
		title = Rover Drive
		
		PARAMETER
		{
			name = WaypointAlpha
			type = VisitWaypoint
			index = 0
			distance = 100.0
			title = Visit Rover Site Alpha
			showMessages = true
			disableOnStateChange = true
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointBeta
			type = VisitWaypoint
			index = 1
			distance = 100.0
			title = Visit Rover Site Beta
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointCharlie
			type = VisitWaypoint
			index = 2
			distance = 100.0
			title = Visit Rover Site Charlie
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}
	}
	
	BEHAVIOUR
	{
		name = RoverDialog
		type = DialogBox
		
		DIALOG_BOX
		{
			title = New Rover Contract Accepted
			condition = CONTRACT_ACCEPTED
		
			position = center
		
			titleColor = #FFFFFF
			TEXT
			{
				text = You have successfully landed your rover and a new contract has been automatically accepted for you. In this contract, you will use your rover to explore sites near you.
			}
		}
	}
	
	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator

		WAYPOINT
		{
			name = Rover Location
			hidden = true
			
			icon = report
			altitude = 0.0
			latitude = @/targetVessel.Location().Latitude()
			longitude = @/targetVessel.Location().Longitude()			
		}
		
		RANDOM_WAYPOINT_NEAR
		{
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 0
			minDistance = 500.0
			maxDistance = 1000.0
		}

		RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Beta
			parameter = WaypointAlpha
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 1
			minDistance = 500.0
			maxDistance = 1000.0
		}
	   RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Charlie
			parameter = WaypointBeta
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 2
			minDistance = 500.0
			maxDistance = 2000.0
		}
	}
}

// *************************** Moho Rover

CONTRACT_TYPE
{
	name = MohoRover
    group = Rovers
	
    title = Land a rover on @/targetBody
	agent = Experimental Engineering Group
	
	sortKey = 108
	
    synopsis = Send a rover to @/targetBody
	notes = Send a rover to @/targetBody
	
    description = We could send a crew to @/targetBody, but that is dangerous, let's send the next best thing! We need to land a rover on @/targetBody.
	
    completedMessage = Congratulations! Now that our rover is landed safely and communicating back to us, let's do some science!
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @CareerEvolution:Mercury
	
	// REWARDS
    rewardScience = 0
    rewardReputation = 0
    rewardFunds = 0
	
    advanceFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyMoho
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = MohoRover
		type = VesselParameterGroup
		title = Rover
		define = MohoRover
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			hideChildren = true
			title = Uncrewed
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			title = Land your rover on @/targetBody
		}
		PARAMETER
		{
			name = VesselIsRover
			type = VesselIsType
			vesselType = Rover
			title = Set your vessel type to Rover
		}
	}
}

CONTRACT_TYPE
{
	name = MohoRoverDrive
    group = Rovers
	
    title = Explore @/targetBody with a Rover
	agent = Experimental Engineering Group
	
	sortKey = 109
	
    synopsis = Use @/targetVessel to explore @/targetBody
	notes = Use @/targetVessel to explore @/targetBody
	
    description = Use the rover you have on @/targetBody to visit the waypoints that our scientists are interested in.
	
    completedMessage = Congratulations! As long as the Rover continues to operate, our scientists will continue to receive valuable information about @/targetBody.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = false
	autoAccept = true
	
    targetBody = @CareerEvolution:Mercury
	
	// REWARDS
    rewardScience = 5
    rewardReputation = 12
    rewardFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ALL
		targetVessel = AllVessels().Where(v => v.VesselType() == Rover && v.IsLanded() == true && v.CelestialBody() == @targetBody).SelectUnique()
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MohoRover
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = MohoRoverDrive
		type = VesselParameterGroup
		title = Rover Drive
		
		PARAMETER
		{
			name = WaypointAlpha
			type = VisitWaypoint
			index = 0
			distance = 100.0
			title = Visit Rover Site Alpha
			showMessages = true
			disableOnStateChange = true
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointBeta
			type = VisitWaypoint
			index = 1
			distance = 100.0
			title = Visit Rover Site Beta
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointCharlie
			type = VisitWaypoint
			index = 2
			distance = 100.0
			title = Visit Rover Site Charlie
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}
	}
	
	BEHAVIOUR
	{
		name = RoverDialog
		type = DialogBox
		
		DIALOG_BOX
		{
			title = New Rover Contract Accepted
			condition = CONTRACT_ACCEPTED
		
			position = center
		
			titleColor = #FFFFFF
			TEXT
			{
				text = You have successfully landed your rover and a new contract has been automatically accepted for you. In this contract, you will use your rover to explore sites near you.
			}
		}
	}
	
	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator

		WAYPOINT
		{
			name = Rover Location
			hidden = true
			
			icon = report
			altitude = 0.0
			latitude = @/targetVessel.Location().Latitude()
			longitude = @/targetVessel.Location().Longitude()			
		}
		
		RANDOM_WAYPOINT_NEAR
		{
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 0
			minDistance = 500.0
			maxDistance = 1000.0
		}

		RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Beta
			parameter = WaypointAlpha
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 1
			minDistance = 500.0
			maxDistance = 1000.0
		}
	   RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Charlie
			parameter = WaypointBeta
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 2
			minDistance = 500.0
			maxDistance = 2000.0
		}
	}
}

// *************************** Pluto Rover

CONTRACT_TYPE
{
	name = PlutoRover
    group = Rovers
	
    title = Land a rover on @/targetBody
	agent = Experimental Engineering Group
	
	sortKey = 110
	
    synopsis = Send a rover to @/targetBody
	notes = Send a rover to @/targetBody
	
    description = We could send a crew to @/targetBody, but that is dangerous, let's send the next best thing! We need to land a rover on @/targetBody.
	
    completedMessage = Congratulations! Now that our rover is landed safely and communicating back to us, let's do some science!
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = @/pluto
	
	// REWARDS
    rewardScience = 0
    rewardReputation = 0
    rewardFunds = 0
	
    advanceFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	
	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		pluto = @/targetBodies.ElementAt(3)
		title = Second Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 3
		title = There must be a 4th planet past @/jupiter
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyPluto
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlutoRover
		type = VesselParameterGroup
		title = Rover
		define = PlutoRover
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			hideChildren = true
			title = Uncrewed
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			title = Land your rover on @/targetBody
		}
		PARAMETER
		{
			name = VesselIsRover
			type = VesselIsType
			vesselType = Rover
			title = Set your vessel type to Rover
		}
	}
}

CONTRACT_TYPE
{
	name = PlutoRoverDrive
    group = Rovers
	
    title = Explore @/targetBody with a Rover
	agent = Experimental Engineering Group
	
	sortKey = 111
	
    synopsis = Use @/targetVessel to explore @/targetBody
	notes = Use @/targetVessel to explore @/targetBody
	
    description = Use the rover you have on @/targetBody to visit the waypoints that our scientists are interested in.
	
    completedMessage = Congratulations! As long as the Rover continues to operate, our scientists will continue to receive valuable information about @/targetBody.
	
	minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = false
	autoAccept = true
	
    targetBody = @/pluto
	
	// REWARDS
    rewardScience = 5
    rewardReputation = 12
    rewardFunds = @CareerEvolution:Kerbucks3
	
	prestige = Significant
	
	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		pluto = @/targetBodies.ElementAt(3)
		title = Second Planet Past Gas Giant
	}
	
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ALL
		targetVessel = AllVessels().Where(v => v.VesselType() == Rover && v.IsLanded() == true && v.CelestialBody() == @targetBody).SelectUnique()
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = PlutoRover
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = PlutoRoverDrive
		type = VesselParameterGroup
		title = Rover Drive
		
		PARAMETER
		{
			name = WaypointAlpha
			type = VisitWaypoint
			index = 0
			distance = 100.0
			title = Visit Rover Site Alpha
			showMessages = true
			disableOnStateChange = true
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointBeta
			type = VisitWaypoint
			index = 1
			distance = 100.0
			title = Visit Rover Site Beta
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}

		PARAMETER
		{
			name = WaypointCharlie
			type = VisitWaypoint
			index = 2
			distance = 100.0
			title = Visit Rover Site Charlie
			showMessages = true
			disableOnStateChange = true
			rewardScience = 3
			hideChildren = true
		}
	}
	
	BEHAVIOUR
	{
		name = RoverDialog
		type = DialogBox
		
		DIALOG_BOX
		{
			title = New Rover Contract Accepted
			condition = CONTRACT_ACCEPTED
		
			position = center
		
			titleColor = #FFFFFF
			TEXT
			{
				text = You have successfully landed your rover and a new contract has been automatically accepted for you. In this contract, you will use your rover to explore sites near you.
			}
		}
	}
	
	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator

		WAYPOINT
		{
			name = Rover Location
			hidden = true
			
			icon = report
			altitude = 0.0
			latitude = @/targetVessel.Location().Latitude()
			longitude = @/targetVessel.Location().Longitude()			
		}
		
		RANDOM_WAYPOINT_NEAR
		{
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 0
			minDistance = 500.0
			maxDistance = 1000.0
		}

		RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Beta
			parameter = WaypointAlpha
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 1
			minDistance = 500.0
			maxDistance = 1000.0
		}
	   RANDOM_WAYPOINT_NEAR
		{
			name = Rover Site Charlie
			parameter = WaypointBeta
			hidden = false
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			nearIndex = 2
			minDistance = 500.0
			maxDistance = 2000.0
		}
	}
}